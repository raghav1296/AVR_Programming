
i2c slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000112  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000038  00000000  00000000  00000142  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000019d  00000000  00000000  0000017a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000113  00000000  00000000  00000317  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000172  00000000  00000000  0000042a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000054  00000000  00000000  0000059c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000194  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000048  00000000  00000000  00000784  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000028  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3d 00 	call	0x7a	; 0x7a <main>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <TWIReadACK>:
	TWAR=0b01010101;
	TWCR|=0<<TWSTA|1<<TWEN|1<<TWEA|0<<TWSTO;
}
char TWIReadACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
  6c:	84 ec       	ldi	r24, 0xC4	; 196
  6e:	86 bf       	out	0x36, r24	; 54
	while ((TWCR & (1<<TWINT)) == 0);
  70:	06 b6       	in	r0, 0x36	; 54
  72:	07 fe       	sbrs	r0, 7
  74:	fd cf       	rjmp	.-6      	; 0x70 <TWIReadACK+0x4>
	return TWDR;
  76:	83 b1       	in	r24, 0x03	; 3
}
  78:	08 95       	ret

0000007a <main>:
int main(void)
{
	DDRB=255;
  7a:	8f ef       	ldi	r24, 0xFF	; 255
  7c:	87 bb       	out	0x17, r24	; 23
	PORTB=0b01010101;
  7e:	85 e5       	ldi	r24, 0x55	; 85
  80:	88 bb       	out	0x18, r24	; 24
    while(1)
    {
		PORTB=TWIReadACK();
  82:	0e 94 36 00 	call	0x6c	; 0x6c <TWIReadACK>
  86:	88 bb       	out	0x18, r24	; 24
       while(PORTB)
  88:	88 b3       	in	r24, 0x18	; 24
  8a:	88 23       	and	r24, r24
  8c:	61 f0       	breq	.+24     	; 0xa6 <main+0x2c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8e:	2f ef       	ldi	r18, 0xFF	; 255
  90:	89 e6       	ldi	r24, 0x69	; 105
  92:	98 e1       	ldi	r25, 0x18	; 24
  94:	21 50       	subi	r18, 0x01	; 1
  96:	80 40       	sbci	r24, 0x00	; 0
  98:	90 40       	sbci	r25, 0x00	; 0
  9a:	e1 f7       	brne	.-8      	; 0x94 <main+0x1a>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <main+0x24>
  9e:	00 00       	nop
  a0:	88 b3       	in	r24, 0x18	; 24
  a2:	81 11       	cpse	r24, r1
  a4:	f4 cf       	rjmp	.-24     	; 0x8e <main+0x14>
  a6:	2f ef       	ldi	r18, 0xFF	; 255
  a8:	87 ea       	ldi	r24, 0xA7	; 167
  aa:	91 e6       	ldi	r25, 0x61	; 97
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	80 40       	sbci	r24, 0x00	; 0
  b0:	90 40       	sbci	r25, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <main+0x32>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x3c>
  b6:	00 00       	nop
  b8:	e4 cf       	rjmp	.-56     	; 0x82 <main+0x8>

000000ba <_exit>:
  ba:	f8 94       	cli

000000bc <__stop_program>:
  bc:	ff cf       	rjmp	.-2      	; 0xbc <__stop_program>
